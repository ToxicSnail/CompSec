section .data  
    msg db  "Enter two numbers", 0xA
    len equ $ - msg 
    endl db 0xA     ;символ переноса строки

section .bss 
    x resb 1
    y resb 1
    sum resb 1 

section .text 
global _start 
 
_start: 
    ;вывод сообщения о вводе
    mov eax, 4      ;системный вызов вывода (sys_write)
    mov ebx, 1      ;дескриптор потока вывода
    mov ecx, msg    ;откуда берем данные на вывод
    mov edx, len    ;сколько выводить придется (длина сообщения)
    int 0x80        ;прерывание

    ;ввод первого числа
    mov eax, 3      ;системный вызов ввода (sys_read)
    mov ebx, 0      ;дескриптор потока ввода
    mov ecx, x      ;переменная для ввода
    mov edx, 2      ;"длина" переменной (сколько читаем). Пишем двойку, чтобы пробел захватить
    int 0x80  

    ;ввод второго числа
    mov eax, 3      ;системный вызов ввода (sys_read)
    mov ebx, 0      ;дескриптор потока ввода
    mov ecx, y      ;переменная для ввода
    mov edx, 1      ;"длина" переменной (сколько читаем)
    int 0x80  

    ;сложение x и y
    mov eax, [x]    ;разыменовываем x и получаем данные из ячейки по адресу 'x'
    sub eax, '0'    ;вычитаем "0" (42), т.к. еще имеем цифру как символ
    mov ebx, [y] 
    sub ebx, '0' 
    add eax, ebx    ;слагаем число в x с числом в y
    add eax, '0'    ;добавляем "0", чтобы иметь печатный символ для вывода
 
    mov [sum], eax  ;кладем в ячейку по адресу sum значение из eax
 
    ;вывод суммы
    mov eax, 4
    mov ebx, 1
    mov ecx, sum
    mov edx, 1
    int 0x80 

    ;вывод сообщения о вводе
    mov eax, 4      ;системный вызов вывода (sys_write)
    mov ebx, 1      ;дескриптор потока вывода
    mov ecx, endl   ;откуда берем данные на вывод
    mov edx, 1      ;сколько выводить придется (длина сообщения)
    int 0x80        ;прерывание

    mov eax, 1      ;системный вызов на выход
    mov ebx, 0      ;возвращаем 0 по завершении
    int 0x80 
